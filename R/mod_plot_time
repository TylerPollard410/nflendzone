# Title: NFL Endzone Analysis Plot

# Libraries ----
# library(tictoc)
# library(tidytext)
# library(MASS)
# library(plotly)
# library(smplot2)
# library(patchwork)
# library(doParallel)
# library(rBayesianOptimization)
# library(xgboost)
# library(caret)
# library(rstan)
# library(cmdstanr)
# library(brms)
# library(posterior)
# library(bayesplot)
# library(Metrics) # for MAE, RMSE
#library(vip)
# library(broom.mixed)
# library(tidybayes)
#library(discrim)
#library(bayesian)
#library(timetk)
#library(modeltime)
#library(tidymodels)

# detach("package:nflendzonePipeline",unload = TRUE, force = TRUE)
# install.packages(".", repos = NULL, type = "source")
# pak::pak("TylerPollard410/nflendzone")

library(plotly)
library(smplot2)
library(patchwork)
library(esquisse)
library(nflverse)
library(tidyverse)
library(nflendzone)


team_features_data <- nflreadr::rds_from_url(paste0(
  base_repo_url,
  "team_features/team_features.rds"
))

# Stan data ----

## Global Inputs ----
df <- game_fit_data_all
start_train <- list(season = 2002, week = 1)
end_train_init <- list(season = 2024, week = 22)
end_train_final <- list(season = 2025, week = 1)
n_draws_gq <- 100
save_root <- "Model Fitting/ssm_check"
iter_warmup <- 500
iter_sampling <- 1000
chains <- 4
adapt_delta <- 0.9
max_treedepth <- 10
sig_figs <- 10

## week_tbl ----
week_tbl <- build_week_table(df)

## idx ----
teams <- sort(unique(c(df$home_team, df$away_team)))
seasons <- sort(unique(df$season))
weeks <- sort(unique(df$week_idx))

team_idx <- setNames(1:32, teams)
season_idx <- setNames(unique(week_tbl$season_idx), unique(week_tbl$season))
week_idx <- setNames(
  week_tbl$week_idx,
  paste0("[", week_tbl$season_idx, ",", week_tbl$week, "]")
)

N_teams <- length(unique(df$home_id))
N_seasons <- max(df$season_idx)
N_weeks <- max(df$week_idx)

## stan_data ----
stan_data <- make_stan_data(
  df,
  start_train$season,
  start_train$week,
  end_train_init$season,
  end_train_init$week
)

## forecast_data ----
next_week <- next_week_after(
  week_tbl,
  end_train_init$season,
  end_train_init$week
)
next_sched <- schedule_for(df, next_week$season, next_week$week)
stan_data_forecast <- append_sched_to_stan_data(stan_data, next_sched)

# team long data ----
plot_data_long <- full_join(
  team_features_data,
  game_data_long
) |>
  filter(!is.na(result))

# Plot 1
esquisse::esquisser(data = plot_data_long)
